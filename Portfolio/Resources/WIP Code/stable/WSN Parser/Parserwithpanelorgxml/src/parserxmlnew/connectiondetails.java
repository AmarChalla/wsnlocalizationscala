/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * connectiondetails.java
 *
 * Created on 17-feb-2009, 23:51:46
 */

package parserxmlnew;
import java.io.IOException;
import net.tinyos.message.*;

/**
 *
 * @author Poseidon
 */
public class connectiondetails extends javax.swing.JFrame {

    private static MoteIF gateway;
    private static Serialsender Sender;

    /** Creates new form connectiondetails */
    public connectiondetails() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("192.168.1.100");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(240, 240, 240));
        jTextField2.setEditable(false);
        jTextField2.setText("Parser:");
        jTextField2.setBorder(null);

        jTextField3.setText("3800");

        jTextField4.setText("3801");

        jButton2.setText("start");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButton1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton2)
                            .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(15, 15, 15)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButton2))
                    .add(layout.createSequentialGroup()
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(54, 54, 54)
                        .add(jButton1)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        //TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    public static String IP;
 //   public static String Listenport;
 //   public static String Sendport;

    public static int Listenport;
    public static int Sendport;

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         //try
         //{
             gateway = new MoteIF();
            //startrunning();
           // gateway = new MoteIF();
         //} catch (IOException e) { e.printStackTrace(); }

         System.out.println("Button pressed");
        IP = jTextField1.getText();
        String Listenport2 = jTextField4.getText();
        Listenport = Integer.parseInt(Listenport2);
        String Sendport2 = jTextField3.getText();
        Sendport = Integer.parseInt(Sendport2);

        System.out.println("IP: " + IP);
        System.out.println("Sendport: " + Sendport);
        System.out.println("Listenport: " + Listenport);


       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       try
       {
        startrunning();
            //startrunning();
           // gateway = new MoteIF();
       } catch (IOException e) { e.printStackTrace(); }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private static void startrunning() throws IOException {
       // IP = jTextField1.getText();
        // declare threads which manage the serial connection
        //gateway = new MoteIF();
        Sender = new Serialsender(gateway);
        //Handler = new Requesthandler(Sender);
        Thread Scouter = new Thread(new Serial(gateway));
        Thread Handler = new Thread(new Requesthandler(Sender));

        Scouter.start();
        Sender.start();
        Handler.start();
        System.out.println("Threads started");
        //Handler.test();

        // manage request for the WSN
        /*while (true) {
            msg = new String();
            msg = Handler.readConnection();
            Handler.handle(msg);
        }*/
    }


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) throws IOException
    {
        /*
        String source = "";
        if (args.length == 2)
            source = args[1];
        else
        {
            System.exit(1);
        }
        gateway = new MoteIF();
        if (gateway == null)
        {
            System.out.println("gateway == null");
            System.exit(1);
        }
        //System.out.println("Startrunning()");
        //startrunning();
        */
        

        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new connectiondetails().setVisible(true);
               //gateway = new MoteIF();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

}
